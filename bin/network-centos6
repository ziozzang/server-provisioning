#!/usr/bin/python

import json
import os
import sys

def chkwrt(f, lky, rky, rkyk=None):
  try:
    if rkyk is not None:
      rky = rky[rkyk]
    f.write("%s=%s\n" %(lky, rky))
  except:
    pass

if len(sys.argv) != 2:
    print "Usage:\n # %s file" % sys.argv[0]
    exit(0)

j = json.load(open(sys.argv[1]))
for i in j["network"]:
  if i["type"].lower() == "public":
    #Set Default Gateway
    os.system("%s %s %s %s" %("/var/local/sysinit/bin/conf-update","/etc/sysconfig/network","GATEWAY", i["gateway"]))
  f = open("/etc/sysconfig/network-scripts/ifcfg-%s" % i["nic"], "w")
  chkwrt(f, "DEVICE", i, "nic")
  chkwrt(f, "HWADDR", i, "mac")
  chkwrt(f, "IPADDR", i, "address")
  chkwrt(f, "NETMASK", i, "subnet")
  chkwrt(f, "GATEWAY", i, "gateway")
  try:
    chkwrt(f, "DNS1", i["dns"][0])
  except:
    pass
  try:
    chkwrt(f, "DNS2", i["dns"][1])
  except:
    pass
  f.write("TYPE=Ethernet\n")
  f.write("ONBOOT=yes\n")
  f.write("NM_CONTROLLED=no\n")
  f.write("BOOTPROTO=none\n")
  f.write("USERCTL=no\n")
  f.write("IPV6INIT=no\n")
  f.write("MTU=1500\n")
  #f.write("NETWORK=192.168.0.0\n")
  f.close()

if j.has_key("hostname"):
  os.system("%s %s %s %s" % \
    ("/var/local/sysinit/bin/conf-update","/etc/sysconfig/network","HOSTNAME", j["hostname"]))

os.system("%s %s %s %s" % \
  ("/var/local/sysinit/bin/conf-update", "/etc/sysconfig/network","NETWORKING", "yes"))
os.system("%s %s %s %s" % \
  ("/var/local/sysinit/bin/conf-update", "/etc/sysconfig/network","NOZEROCONF", "yes"))

os.system("truncate -s0 /etc/udev/rules.d/70-persistent-net.rules")
os.system("truncate -s0 /lib/udev/rules.d/75-persistent-net-generator.rules")
os.system("service network restart")
